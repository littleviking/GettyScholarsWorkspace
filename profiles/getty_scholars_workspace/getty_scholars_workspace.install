<?php
/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function getty_scholars_workspace_install() {
  // Enable some getty_scholars_workspace blocks.
  $default_theme = 'gettysw';
  $admin_theme = 'seven';
  // disable all themes
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();
  // enable $default_theme
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $default_theme)
    ->execute();
  // enable $admin_theme
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  variable_set('theme_default', $default_theme);
  variable_set('admin_theme', $admin_theme);
  // activate admin theme when editing a node
  variable_set('node_admin_theme', '1');

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = user_role_load_by_name('administrator');
  if (empty($admin_role)) {
    $admin_role = new stdClass();
    $admin_role->name = 'administrator';
    $admin_role->weight = 10;
    user_role_save($admin_role);
  }
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);
  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Update the menu router information.
  menu_rebuild();

  // revert features to ensure they are all installed
  $features = array(
    'bibliography',
    'bibliography_support',
    'comparison_display',
    'comparison_node',
    'essay_node',
    'gettysw_annotation_permissions',
    'gettysw_user_permissions',
    'gettysw_wysiwyg',
    'image_node',
    'lighttable',
    'manuscript_node',
    'page_node',
    'project_dashboard',
    'project_node',
    'shared_field_bases',
    'gettysw_theme',
    'timeline',
    'views_timelinejs_feature',
  );
  features_revert($features);

  // ignore any rebuild messages
  node_access_needs_rebuild(FALSE);

  // ignore any other install messages
  drupal_get_messages();
}